<?xml version="1.0" encoding="UTF-8" ?>
<!-- Copyright 2015-2016 the original author or authors. Licensed under the 
	Apache License, Version 2.0 (the "License"); you may not use this file except 
	in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 
	Unless required by applicable law or agreed to in writing, software distributed 
	under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES 
	OR CONDITIONS OF ANY KIND, either express or implied. See the License for 
	the specific language governing permissions and limitations under the License. -->
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bage.mapper.statistics.SessionInfoStatisticsMapper">


	<select id="queryLatest" resultType="HashMap">
		<![CDATA[
			select h.* ,a.appname,a.appdesc
			FROM statistics_minute_session h , appinfo a
			WHERE h.appid = #{appid} and h.appid = a.id
			and h.id > #{maxId}
		 ]]>
	</select>
	

	<select id="latestOne" resultType="HashMap">
		SELECT * from
		statistics_minute_session where id = (SELECT max(id) FROM
		statistics_minute_session where appid = #{appid} );
	</select>

	<select id="getMinuteTotalRow" resultType="java.lang.Integer">
		select count(1) as totalRow from statistics_minute_session
		where appid
		= #{appid}
		<if test="startTime != ''.toString()"><![CDATA[AND queryTime >= #{startTime}]]></if>
		<if test="stopTime != ''.toString()"><![CDATA[AND queryTime <= #{stopTime}]]></if>
	</select>
	<select id="queryMinuteByPage" resultType="HashMap">
		select a.* from statistics_minute_session a
		where a.appid = #{appid}
		<if test="startTime != ''.toString()"><![CDATA[AND queryTime >= #{startTime}]]></if>
		<if test="stopTime != ''.toString()"><![CDATA[AND queryTime <= #{stopTime}]]></if>
		order by a.id
		limit #{startId},#{pageLength}
	</select>

	<select id="getHourTotalRow" resultType="java.lang.Integer">
		select count(1) as totalRow from statistics_hour_session
		where appid =
		#{appid}
		<if test="startTime != ''.toString()"><![CDATA[AND queryTime >= #{startTime}]]></if>
		<if test="stopTime != ''.toString()"><![CDATA[AND queryTime <= #{stopTime}]]></if>
	</select>
	<select id="queryHourByPage" resultType="HashMap">
		select a.* from statistics_hour_session a
		where a.appid = #{appid}
		<if test="startTime != ''.toString()"><![CDATA[AND queryTime >= #{startTime}]]></if>
		<if test="stopTime != ''.toString()"><![CDATA[AND queryTime <= #{stopTime}]]></if>
		order by a.id
		limit #{startId},#{pageLength}
	</select>

	<select id="getDayTotalRow" resultType="java.lang.Integer">
		select count(1) as totalRow from statistics_day_session
		where appid =
		#{appid}
		<if test="startTime != ''.toString()"><![CDATA[AND queryTime >= #{startTime}]]></if>
		<if test="stopTime != ''.toString()"><![CDATA[AND queryTime <= #{stopTime}]]></if>
	</select>
	<select id="queryDayByPage" resultType="HashMap">
		select a.* from statistics_day_session a
		where a.appid = #{appid}
		<if test="startTime != ''.toString()"><![CDATA[AND queryTime >= #{startTime}]]></if>
		<if test="stopTime != ''.toString()"><![CDATA[AND queryTime <= #{stopTime}]]></if>
		order by a.id
		limit #{startId},#{pageLength}
	</select>

	<select id="getMonthTotalRow" resultType="java.lang.Integer">
		select count(1) as totalRow from statistics_month_session
		where appid =
		#{appid}
		<if test="startTime != ''.toString()"><![CDATA[AND queryTime >= #{startTime}]]></if>
		<if test="stopTime != ''.toString()"><![CDATA[AND queryTime <= #{stopTime}]]></if>
	</select>
	<select id="queryMonthByPage" resultType="HashMap">
		select a.* from statistics_month_session a
		where a.appid = #{appid}
		<if test="startTime != ''.toString()"><![CDATA[AND queryTime >= #{startTime}]]></if>
		<if test="stopTime != ''.toString()"><![CDATA[AND queryTime <= #{stopTime}]]></if>
		order by a.id
		limit #{startId},#{pageLength}
	</select>

	<select id="getYearTotalRow" resultType="java.lang.Integer">
		select count(1) as totalRow from statistics_year_session
		where appid =
		#{appid}
		<if test="startTime != ''.toString()"><![CDATA[AND queryTime >= #{startTime}]]></if>
		<if test="stopTime != ''.toString()"><![CDATA[AND queryTime <= #{stopTime}]]></if>
	</select>
	<select id="queryYearByPage" resultType="HashMap">
		select a.* from statistics_year_session a
		where a.appid = #{appid}
		<if test="startTime != ''.toString()"><![CDATA[AND queryTime >= #{startTime}]]></if>
		<if test="stopTime != ''.toString()"><![CDATA[AND queryTime <= #{stopTime}]]></if>
		order by a.id
		limit #{startId},#{pageLength}
	</select>


	<select id="latest" resultType="HashMap">
		<![CDATA[
			select h.* ,a.appname,a.appdesc
			FROM statistics_minute_session h , appinfo a
			WHERE h.appid = #{appid} and h.appid = a.id
			and h.queryTime >= #{startTime} AND h.queryTime <= #{stopTime}
		 ]]>
		ORDER BY h.id desc
		LIMIT 0,#{n}
	</select>

	<select id="topNHour" resultType="HashMap">
		<![CDATA[
			select h.* ,a.appname,a.appdesc
			FROM statistics_minute_session h , appinfo a
			WHERE h.id IN(
				select id FROM statistics_minute_session
				WHERE queryTime >= #{startTime} AND queryTime <= #{stopTime}
				GROUP BY appid 
		    ) and h.appid = a.id
		 ]]>
		ORDER BY h.userCount
		<if test="sortType == 'DESC'.toString()">DESC</if>
		LIMIT 0,#{n}
	</select>
	<select id="topNDay" resultType="HashMap">
		<![CDATA[
			select h.* ,a.appname,a.appdesc
			FROM statistics_hour_session h , appinfo a
			WHERE h.id IN(
				select id FROM statistics_hour_session
				WHERE queryTime >= #{startTime} AND queryTime <= #{stopTime}
				GROUP BY appid 
		    ) and h.appid = a.id
		 ]]>
		ORDER BY h.userCount
		<if test="sortType == 'DESC'.toString()">DESC</if>
		LIMIT 0,#{n}
	</select>
	<select id="topNMonth" resultType="HashMap">
		<![CDATA[
			select h.* ,a.appname,a.appdesc
			FROM statistics_day_session h , appinfo a
			WHERE h.id IN(
				select id FROM statistics_day_session
				WHERE queryTime >= #{startTime} AND queryTime <= #{stopTime}
				GROUP BY appid 
		    ) and h.appid = a.id
		 ]]>
		ORDER BY h.userCount
		<if test="sortType == 'DESC'.toString()">DESC</if>
		LIMIT 0,#{n}
	</select>
	<select id="topNYear" resultType="HashMap">
		<![CDATA[
			select h.* ,a.appname,a.appdesc
			FROM statistics_month_session h , appinfo a
			WHERE h.id IN(
				select id FROM statistics_month_session
				WHERE queryTime >= #{startTime} AND queryTime <= #{stopTime}
				GROUP BY appid 
		    ) and h.appid = a.id
		 ]]>
		ORDER BY h.userCount
		<if test="sortType == 'DESC'.toString()">DESC</if>
		LIMIT 0,#{n}
	</select>

	<select id="topN" resultType="HashMap">
		<![CDATA[
			select h.* ,a.appname,a.appdesc
			FROM statistics_month_session h , appinfo a
			WHERE h.id IN(
				select id FROM statistics_month_session
				WHERE queryTime >= #{startTime} AND queryTime <= #{stopTime}
				GROUP BY appid 
		    ) and h.appid = a.id
		    ORDER BY h.userCount DESC LIMIT 0,#{n}
		 ]]>
	</select>

	<insert id="insertBatchMinute" parameterType="java.util.List">
		insert into statistics_minute_session (appid,queryTime
		,userCount
		)
		values
		<foreach collection="list" item="item" index="index"
			separator=",">
			(#{item.appid},#{item.queryTime}
			,#{item.userCount})
		</foreach>
	</insert>

	<insert id="insertBatchHour" parameterType="java.util.List">
		insert into statistics_hour_session (appid,queryTime
		,userCount
		)
		values
		<foreach collection="list" item="item" index="index"
			separator=",">
			(#{item.appid},#{item.queryTime}
			,#{item.userCount})
		</foreach>
	</insert>

	<insert id="insertBatchDay" parameterType="java.util.List">
		insert into statistics_day_session (appid,queryTime
		,userCount
		)
		values
		<foreach collection="list" item="item" index="index"
			separator=",">
			(#{item.appid},#{item.queryTime}
			,#{item.userCount})
		</foreach>
	</insert>

	<insert id="insertBatchMonth" parameterType="java.util.List">
		insert into statistics_month_session (appid,queryTime
		,userCount
		)
		values
		<foreach collection="list" item="item" index="index"
			separator=",">
			(#{item.appid},#{item.queryTime}
			,#{item.userCount})
		</foreach>
	</insert>

	<insert id="insertBatchYear" parameterType="java.util.List">
		insert into statistics_year_session (appid,queryTime
		,userCount
		)
		values
		<foreach collection="list" item="item" index="index"
			separator=",">
			(#{item.appid},#{item.queryTime}
			,#{item.userCount})
		</foreach>
	</insert>

</mapper>